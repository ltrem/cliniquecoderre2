{% extends 'base.html.twig' %}

{% block header %}
{% endblock %}

{% block body %}

    {{ form_start(form, {'attr': {'id': 'form_new_appointment'}}) }}

        <!-- Navigation -->
        <nav class="navbar navbar-default navbar-fixed-top navbar-steps" data-spy="affix" data-offset-top="25">
            <div class="container">
                <ul class="nav navbar-nav">
                    <li class="steps-scroll nav-item">
                        <a href="#step-1">Étape 1</a>
                    </li>
                    <li class="steps-scroll nav-item">
                        <a href="#step-2">Étape 2</a>
                    </li>
                    <li class="steps-scroll nav-item">
                        <a href="#step-3">Étape 3</a>
                    </li>
                    <li class="steps-scroll nav-item">
                        <a href="#step-confirm">Confirmation</a>
                    </li>
                </ul>
            </div><!-- /.container-fluid -->
        </nav>

        <div class="container container-steps">
            <div class="row">
                <div class="col-sm-12 steps-col" id="step-1">

                    <h4>Étape 1 : {{ 'event.selectProfessional'|trans }}</h4>
                    <div class="row form-group">
                        {% if employes|length %}
                            {% for employe in employes %}
                                <div class="col-sm-3 col-xs-6">
                                    <div class="thumbnail employe-selector" data-employe-id="{{ employe.id }}">
                                        {% if employe.picture|length %}
                                            <img src="{{ vich_uploader_asset(employe.picture, 'imageFile') }}" alt="Photo de l'employer" class="img-thumbnail img-fluid" />
                                            <div class="caption">
                                                <h5>
                                                    {{ employe.firstname}} {{ employe.lastname }}
                                                    <span class="glyphicon glyphicon-ok pull-right" aria-hidden="true"></span>
                                                </h5>
                                            </div>
                                        {% else %}
                                            <span class="glyphicon glyphicon-user" aria-hidden="true"></span>
                                            <div class="caption">
                                                <h5>
                                                    {{ employe.firstname}} {{ employe.lastname }}
                                                    <span class="glyphicon glyphicon-ok pull-right" aria-hidden="true"></span>
                                                </h5>
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
                            {% endfor %}
                        {% endif %}
                        <div style="display: none;">
                            {{ form_label(form.employe) }}
                            {{ form_errors(form.employe) }}
                            {{ form_widget(form.employe) }}
                        </div>
                    </div>

                </div>

                <div class="col-sm-12 steps-col" id="step-2">

                    <h4>Étape 2 : {{ form_label(form.name) }}</h4>

                    <div class="row">
                        <div class="col-sm-8 col-xs-12">

                            <div class="client_event form-group">
                                {{ form_errors(form.name) }}
                                {{ form_widget(form.name) }}
                            </div>

                        </div>
                    </div>

                </div>

                <div class="col-sm-8 col-xs-12 steps-col" id="step-3">

                    <h4>Étape 3 : <label class="control-label">{{ 'event.selectEmpty'|trans }}</label></h4>

                    {{ form_errors(form.startTime) }}
                    {{ form_widget(form.startTime) }}

                    <div class="form-group" style="position:relative">
                        <div class="loading">Loading&#8230;</div>
                        <div id="calendar-new-appointment"></div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div style="padding: 20px 0px;">
                        {{ form_label(form.emergency) }}
                        {{ form_widget(form.emergency) }}
                    </div>
                </div>


                <div class="col-sm-12 steps-col" id="step-confirm">

                    <h4>Confirmer</h4>

                    <p>
                        <input class="new-appointment-datetime-fullname btn btn-lg" type="submit" id="_submit" name="_submit" value="{{ 'event.create'|trans }}" />
                    </p>
                </div>

            </div>
        </div>

    {{ form_end(form) }}

{% endblock %}

{% block documentready %}
    {#$('input[type=datetime]').prop("disabled", true);#}
{% endblock %}

{% block javascripts %}
    <script>
        $( document ).ready(function() {

            // jQuery Validate
            $('#form_new_appointment').validate({
                rules: {
                    "event[startTime]": {
                        required: true
                    }
                },
                messages: {
                    "event[startTime]": {
                        required: "Vous devez absolument choisir une plage disponible."
                    }
                },
                ignore: [],
                lang: 'fr',
                highlight: function(element) {

                    // Add error class on Step
                    $('a[href=#' + $(element).closest('.steps-col').attr('id') + ']').parent().addClass('has-error');

                    // If no date selected remove btn-success on submit
                    if ($('#event_startTime').val() == '') {
                        $('.new-appointment-datetime-fullname').removeClass('btn-success');
                    }

                    $(element).closest('.steps-col').addClass('has-error');
                },
                unhighlight: function(element) {

                    // Remove error class on Step
                    $('a[href=#' + $(element).closest('.steps-col').attr('id') + ']').parent().removeClass('has-error');

                    // If date selected add btn-success on submit
                    if ($('#event_startTime').val() !== '') {
                        $('.new-appointment-datetime-fullname').addClass('btn-success');
                    }

                    $(element).closest('.steps-col').removeClass('has-error');
                },
                errorElement: 'span',
                errorClass: 'help-block',
                errorPlacement: function(error, element) {
                    error.insertAfter($(element).closest('.steps-col').find('h4'));
                },
                focusInvalid: false,
                invalidHandler: function(form, validator) {
                    if (!validator.numberOfInvalids())
                        return;

                    $('html, body').animate({
                        scrollTop: $(validator.errorList[0].element.closest('.steps-col')).offset().top - 150
                    }, 1000);
                }
            });

            $(document).on('click', '.employe-selector', function() {

                // Show loading
                $('.loading').show();

                $('#event_employe').val($(this).data("employeId"));

                $('.employe-selector').removeClass('alert-success');

                if (!$(this).hasClass('alert-success')) {
                    $(this).addClass('alert-success');

                    // Reload event
                    $.when( $('#calendar-new-appointment').fullCalendar( 'refetchEvents' )).then(function(){
                        $('.loading').hide();
                    })
                }
            });
            $( ".employe-selector:first" ).trigger( "click" );

            $('#calendar-new-appointment').fullCalendar({
                lang: 'en',
                weekends: false,
                height: "auto",
                allDaySlot: false,
                header: {
                    left: 'prev, next',
                    center: 'title',
                    right: 'agendaWeek, agendaDay'
                },
                slotMinutes: 15,
                slotLabelFormat:"HH:mm a",
                firstHour: 8,
                defaultDate: moment().add(1, 'day'),
                /*columnFormat: 'ddd',
                views: {
                    basic: {
                        // options apply to basicWeek and basicDay views
                    },
                    agenda: {
                        // options apply to agendaWeek and agendaDay views
                    },
                    week: {
                        // options apply to basicWeek and agendaWeek views
                    },
                    day: {
                        // options apply to basicDay and agendaDay views
                        titleFormat: 'dddd M/D'
                    }
                },*/
                minTime: '08:00:00', // a start time (8am in this example)
                maxTime: '20:00:00', // an end time (20pm in this example)
                defaultView: 'agendaWeek',
                eventSources: [
                    {
                        events: function(start, end, timezone, callback) {

                            // Show loading
                            $('.loading').show();

                            $.ajax({
                                url: Routing.generate('fullcalendar_loader'),
                                type: 'POST',
                                dataType: 'JSON',
                                data: {
                                    // our hypothetical feed requires UNIX timestamps
                                    start: start.unix(),
                                    end: end.unix(),
                                    employe: ($('.employe-selector.alert-success').data('employeId') ? $('.employe-selector.alert-success').data('employeId') : 1) ,
                                    isClient: true
                                },
                                success: function(data) {

                                    var events = [];
                                    $.each(data, function(index) {
                                        events.push({
                                            allDay: false,
                                            backgroundColor: data[index].backgroundColor,
                                            borderColor: data[index].borderColor,
                                            className: data[index].className,
                                            end: data[index].end,
                                            start: data[index].start,
                                            textColor: data[index].textColor,
                                            title: data[index].title,
                                        });
                                    });


                                    $('.loading').hide();

                                    callback(events);
                                }
                            });
                        }
                    }
                ],
                eventClick: function(calEvent, jsEvent, view) {

                    $('.myEvent').each(function() {
                        $(this).removeClass('myEvent');
                    });

                    // change the border color just for fun
                    if (!$(this).hasClass('unavailable')) {

                        // Update Starttime in the form
                        starttime = moment(calEvent.start).format('YYYY-MM-DD HH:mm');
                        $('#event_startTime').val(starttime);

                        $('.new-appointment-datetime-fullname').addClass('btn-success').val("{{ 'event.create'|trans }}" + moment($('#event_startTime').val()).format('HH:mm A - dddd D MMMM'));

                        $(this).addClass('myEvent');

                        $('#form_new_appointment').valid();

                    } else {
                        alert('{{ 'event.error.notFree'|trans }}');
                        $('#event_startTime').val('');
                        $('.new-appointment-datetime-fullname').removeClass('btn-success').val("{{ 'event.create'|trans }}");
                    }
                },
                viewRender: function(currentView){
                    console.log(currentView);

                    var minDate = moment().add(1, 'day').format('YYYY-MM-DD'),
                        // TODO: Configuration of "how far a client can take an appoinement
                        maxDate = moment().add(2, 'months').format('YYYY-MM-DD');

                    // Past
                    if (minDate >= currentView.start.format('YYYY-MM-DD')) {
                        $(".fc-prev-button").prop('disabled', true);
                        $(".fc-prev-button").addClass('fc-state-disabled');
                        $(".fc-prev-button").css("visibility", "hidden");
                    }
                    else {
                        $(".fc-prev-button").removeClass('fc-state-disabled');
                        $(".fc-prev-button").prop('disabled', false);
                        $(".fc-prev-button").css("visibility", "visible");
                    }
                    // Future
                    if (maxDate >= currentView.start.format('YYYY-MM-DD') && maxDate <= currentView.end.format('YYYY-MM-DD')) {
                        $(".fc-next-button").prop('disabled', true);
                        $(".fc-next-button").addClass('fc-state-disabled');
                        $(".fc-next-button").css("visibility", "hidden");
                    } else {
                        $(".fc-next-button").removeClass('fc-state-disabled');
                        $(".fc-next-button").prop('disabled', false);
                        $(".fc-next-button").css("visibility", "visible");
                    }
                }
            });

            // Highlight the top nav as scrolling occurs
            $('body').scrollspy({
                target: '.navbar-steps',
                offset: 151
            });
        });
    </script>
{% endblock %}
